name: Semantic Release

on:
  push:
    branches:
      - main
      - next
      - next-major
      - beta
      - alpha
      - "[0-9]+.[0-9]+.x"
      - "[0-9]+.x"

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      new-release-published: ${{ steps.next-version.outputs.new-release-published }}
      new-release-version: ${{ steps.next-version.outputs.new-release-version }}
      new-release-git-tag: ${{ steps.next-version.outputs.new-release-git-tag }}

    steps:

    - uses: actions/checkout@v4

    - name: Configure Node.js
      uses: actions/setup-node@v5
      with:
          node-version: lts/*

    - name: Install Semantic Release
      run: npm i -g semantic-release @semantic-release/{git,exec,changelog}

    - name: Install Semantic-Release-Export Plugin
      run: npm install --save-dev semantic-release-export-data

    - name: Run Semantic Release
      run: semantic-release
      id: next-version
      env:
        GITHUB_TOKEN: ${{ secrets.RRIV_RUST_GH_TOKEN }}
 
  build:
    name: Publish binaries
    runs-on: ubuntu-latest
    needs: release

    steps:
    - uses: actions/checkout@v4
  
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@nightly
      with:
        targets: thumbv7m-none-eabi

    - name: Cargo build
      run: cargo build --release
      working-directory: board/app
    
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: board/target/thumbv7m-none-eabi/release/app
        asset_name: rriv-firmware-${{ needs.release.outputs.new-release-version }}
        tag: ${{ needs.release.outputs.new-release-git-tag }}
        overwrite: true
          
  # get-next-version:
  #   uses: semantic-release-action/next-release-version/.github/workflows/next-release-version.yml@v4

  # build:
  #   name: Build
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: board
  #   needs:
  #     - get-next-version

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
      
  #     - name: Install semantic-release-cargo
  #       if: needs.get-next-version.outputs.new-release-published == 'true'
  #       uses: EricCrosson/install-github-release-binary@v2
  #       with:
  #         targets: semantic-release-cargo/semantic-release-cargo@v2

  #     - name: Prepare semantic-release for Rust
  #       if: needs.get-next-version.outputs.new-release-published == 'true'
  #       run: semantic-release-cargo prepare ${{ needs.get-next-version.outputs.new-release-version }}

  #     - name: Install Rust toolchain
  #       uses: dtolnay/rust-toolchain@master

  #     - name: Cargo build
  #       run: cargo build --release --target=x86_64-unknown-linux-gnu --all-targets
